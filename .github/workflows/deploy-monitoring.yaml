name: Deploy Monitoring Stack

on:
  workflow_dispatch:    # Manual trigger only

jobs:
  deploy_monitoring:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create .env file for monitoring
        run: |
          echo APP_IP=${{ secrets.APP_SERVER_PRIVATE_IP }} >> .env
          echo MON_IP=${{ secrets.MONITORING_SERVER_PRIVATE_IP }} >> .env
          echo "SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK }}" >> .env

      - name: Deploy Monitoring to EC2
        env:
          HOST: ${{ secrets.MONITORING_EC2_HOST }}
          USERNAME: ubuntu
          KEY: ${{ secrets.MONITORING_EC2_SSH_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem

          # Ensure the directory exists on the EC2 server
          ssh -o StrictHostKeyChecking=no -i key.pem $USERNAME@$HOST "mkdir -p /home/ubuntu/monitoring"

          # Copy monitoring folder
          scp -o StrictHostKeyChecking=no -i key.pem -r monitoring $USERNAME@$HOST:/home/ubuntu/monitoring/

          # Copy docker-compose + env file
          scp -o StrictHostKeyChecking=no -i key.pem docker-compose.yaml .env $USERNAME@$HOST:/home/ubuntu/monitoring/

          # SSH to EC2 and start containers
          ssh -o StrictHostKeyChecking=no -i key.pem $USERNAME@$HOST << EOF
          set -e
          cd /home/ubuntu/monitoring
          echo ">>> Pulling and restarting containers..."
          docker-compose --env-file .env pull || { echo "Pull failed"; exit 1; }
          docker-compose --env-file .env down
          docker-compose --env-file .env up -d
          EOF
